
import com.sun.glass.events.KeyEvent;
import java.awt.Graphics;
//import java.awt.Point;
import java.util.ArrayList;
import javafx.scene.input.MouseEvent;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Aluno
 */
public class Paint extends javax.swing.JFrame {
    //Boolean pressionado = false;
    Boolean mao_livre = false;
    Boolean reta = false;
    Boolean ponto_a_ponto = false;
    Boolean button1 = false;
    Boolean circulo = false;
    
    /**
     * Creates new form Paint
     */
    public Paint() {
        initComponents();
        new Time().start();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Ponto_a_Ponto = new java.awt.Button();
        Circulo = new java.awt.Button();
        Mão_Livre = new java.awt.Button();
        Reta = new java.awt.Button();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 204, 204));
        setPreferredSize(new java.awt.Dimension(1200, 700));
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                formMouseReleased(evt);
            }
        });

        Ponto_a_Ponto.setLabel("Ponto a ponto");
        Ponto_a_Ponto.setMinimumSize(new java.awt.Dimension(51, 24));
        Ponto_a_Ponto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Ponto_a_PontoMouseClicked(evt);
            }
        });
        Ponto_a_Ponto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Ponto_a_PontoKeyPressed(evt);
            }
        });

        Circulo.setLabel("Cículo");
        Circulo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CirculoMouseClicked(evt);
            }
        });

        Mão_Livre.setLabel("Mão Livre");
        Mão_Livre.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Mão_LivreMouseClicked(evt);
            }
        });

        Reta.setLabel("Reta");
        Reta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RetaMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Ponto_a_Ponto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Circulo, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Mão_Livre, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Reta, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 2, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(1100, 1100, 1100))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Ponto_a_Ponto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Circulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Mão_Livre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Reta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(556, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseReleased
        // TODO add your handling code here:
        //pressionado = false;
                
        if(mao_livre)
        {
            
        }
        
        if(reta)
        {
            
        }
        
        if(ponto_a_ponto)
        {
            desenhos.add(new desenho(evt.getX(), evt.getY()));
        }
        
        if(circulo)
        {
            //desenhos.add(new desenho(evt.getX(), evt.getY()));
        }
        //desenhos.clear();
    }//GEN-LAST:event_formMouseReleased

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        // TODO add your handling code here:
        //pressionado = true;
                
        if(mao_livre)
        {
            
        }
        
        if(reta)
        {
            
        }
        
        if(ponto_a_ponto)
        {
            desenhos.add(new desenho(evt.getX(), evt.getY()));
        }
        
        if(circulo)
        {
            //desenhos.add(new desenho(evt.getX(), evt.getY()));
        }
        //desenhos.clear();
    }//GEN-LAST:event_formMousePressed

    private void Mão_LivreMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Mão_LivreMouseClicked
        // TODO add your handling code here:
        this.reta = false;
        this.ponto_a_ponto = false;
        this.mao_livre = true;
        this.circulo = false;
    }//GEN-LAST:event_Mão_LivreMouseClicked

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        // TODO add your handling code here:
        //pressionado = true;
        
        if(mao_livre)
        {
            desenhos.add(new desenho(evt.getX(), evt.getY()));
        }
        
        if(reta)
        {
            
        }
        
        if(ponto_a_ponto)
        {
            
        }
        
        if(circulo)
        {
            //desenhos.add(new desenho(evt.getX(), evt.getY()));
        }
    }//GEN-LAST:event_formMouseDragged

    private void Ponto_a_PontoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Ponto_a_PontoMouseClicked
        // TODO add your handling code here:
        this.reta = false;
        this.ponto_a_ponto = true;
        this.mao_livre = false;
        this.circulo = false;
    }//GEN-LAST:event_Ponto_a_PontoMouseClicked

    private void RetaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RetaMouseClicked
        // TODO add your handling code here:
        this.reta = true;
        this.ponto_a_ponto = false;
        this.mao_livre = false;
        this.circulo = false;
    }//GEN-LAST:event_RetaMouseClicked

    private void Ponto_a_PontoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Ponto_a_PontoKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            desenhos.add(new desenho(desenhos.get(0).x, desenhos.get(0).y));
        }
    }//GEN-LAST:event_Ponto_a_PontoKeyPressed

    private void CirculoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CirculoMouseClicked
        // TODO add your handling code here:
        this.mao_livre = false;
        this.reta = false;
        this.ponto_a_ponto = false;
        this.button1 = false;
        this.circulo = false;
    }//GEN-LAST:event_CirculoMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Paint.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Paint.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Paint.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Paint.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Paint().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button Circulo;
    private java.awt.Button Mão_Livre;
    private java.awt.Button Ponto_a_Ponto;
    private java.awt.Button Reta;
    // End of variables declaration//GEN-END:variables
    
    ArrayList<desenho> desenhos = new ArrayList<>();  
    
    public class desenho
    {
        int x, y;
        public desenho(int x, int y)
        {
            this.x = x;
            this.y = y;
        }
    }
    

    /*
    // Recebe as coordenadas     
    public void setX(int x)
    {
        this.x = x;
    }
    
    public int getX()
    {
       return this.x;
    }
    
    public void setY(int y)
    {
        this.y = y;
    }
    
    public int getY(int y)
    {
        return this.y;
    }    
    // Fim do recebimento das coordenadas    
    */
    
    public void paint(Graphics g)
    {
        //desenhos.add(new desenho(getX(), getY()));
                
        if(mao_livre)
        {
            for(int i=1; i<desenhos.size(); i++)
            {
                int x = desenhos.get(i).x;
                int y = desenhos.get(i).y;
                int x2 = desenhos.get(i-1).x;
                int y2 = desenhos.get(i-1).y;
                g.drawLine(x2, y2, x, y);
            }
        }
        
        if(ponto_a_ponto)
        {
            for(int i=1; i<desenhos.size(); i++)
            {
                int x = desenhos.get(i).x;
                int y = desenhos.get(i).y;
                int x2 = desenhos.get(i-1).x;
                int y2 = desenhos.get(i-1).y;
                g.drawLine(x2, y2, x, y);
            }
        }
        
        if(reta)
        {
            for(int i=1; i<desenhos.size(); i++)
            {
                int x = desenhos.get(i).x;
                int y = desenhos.get(i).y;
                int x2 = desenhos.get(i-1).x;
                int y2 = desenhos.get(i-1).y;
                g.drawLine(x2, y2, x, y);
            }
        }
        
        if(circulo)
        {
            for(int i=1; i<desenhos.size(); i++)
            {
                int x = desenhos.get(i).x;
                int y = desenhos.get(i).y;
                int x2 = desenhos.get(i-1).x;
                int y2 = desenhos.get(i-1).y;
                g.drawOval(x2, y2, x, y);
            }
            
        }
        
    }

    
    public class Time extends Thread{
        public void run(){
            while(true){
                if(ponto_a_ponto)
                {
                    try{                               
                    //Point ponto = getMousePosition();
                    //desenhos.add(new desenho(ponto.x, ponto.y));
                    //desenhos.add(new desenho(getX(), getY()));
                    }catch(Exception erro){}
                    repaint();
                }
                
                if(mao_livre)
                {
                    repaint();
                }
                
                if(reta)
                {
                    repaint();
                }
                
                if(circulo)
                {
                    repaint();
                }
            }
        }
    }
    
}
